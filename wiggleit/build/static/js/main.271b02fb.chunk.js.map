{"version":3,"sources":["axios.js","components/VideoFotter.js","components/VideoSidebar.js","components/Video.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","VideoFotter","channel","description","song","className","mode","alt","src","toast","configure","VideoSidebar","likes","messages","shares","videoUrl","useState","liked","setLiked","fontSize","onClick","e","position","POSITION","TOP_CENTER","text","Video","props","videoRef","useRef","playing","setPlaying","current","pause","play","ref","loop","url","App","videos","setVideos","useEffect","a","get","req","data","fetchPosts","map","video","filePath","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.271b02fb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance=axios.create({\r\n    baseURL:\"https://wiggleit-backend.herokuapp.com/\"\r\n});\r\n\r\nexport default instance;","import \"../css/videoFotter.css\";\r\nimport MusicNoteRoundedIcon from '@material-ui/icons/MusicNoteRounded';\r\nimport Ticker  from \"react-ticker\";\r\n\r\nconst VideoFotter = ({channel,description,song}) => {\r\n    return (\r\n        <div className=\"videoFotter\" >\r\n            <div className=\"videoFotterText\">\r\n                <h3>@{channel}</h3>\r\n                <p>{description}</p>\r\n                <div className=\"videoFooterTicker\" >\r\n                    <MusicNoteRoundedIcon className=\"videoFooterIcon\"/>\r\n                    <Ticker mode=\"smooth\">\r\n                    {\r\n                        ()=><p>{song}</p>\r\n                            \r\n                    }\r\n                    </Ticker>\r\n                </div>\r\n            </div>\r\n            <img alt=\"\" className=\"videoFotterPlayer\" src=\"https://static.thenounproject.com/png/934821-200.png\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoFotter\r\n","\r\nimport \"../css/videoSidebar.css\";\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport RateReviewIcon from '@material-ui/icons/RateReview';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport { useState } from \"react\";\r\nimport {toast}  from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\r\n\r\n\r\ntoast.configure();\r\nconst VideoSidebar = ({likes,shares,messages,videoUrl}) => {\r\n    const [liked,setLiked]=useState(false);\r\n    const notify=()=>{\r\n        toast(\"Under development!\",{position:toast.POSITION.TOP_CENTER});\r\n    }\r\n    const notifyShare=()=>{\r\n        toast(\"Video link copied!\",{position:toast.POSITION.TOP_CENTER});\r\n    }\r\n\r\n    return (\r\n        <div className=\"videoSidebar\">\r\n            <div className=\"videoSidebarButton\">\r\n                {liked?(\r\n                    <EmojiEmotionsIcon fontSize=\"large\" onClick={(e)=>setLiked(false)} />\r\n                ):(\r\n                    <SentimentSatisfiedIcon fontSize=\"large\" onClick={(e)=>setLiked(true)} />\r\n                )}\r\n                \r\n                <p>{liked?likes+1:likes}</p>\r\n            </div>\r\n\r\n            <div className=\"videoSidebarButton\">\r\n                <RateReviewIcon onClick={notify} fontSize=\"large\" />\r\n                <p>{messages}</p>\r\n            </div>\r\n\r\n            <div className=\"videoSidebarButton\">\r\n                <CopyToClipboard text={videoUrl} >\r\n                <TelegramIcon onClick={notifyShare} fontSize=\"large\" />\r\n                </CopyToClipboard>\r\n                <p>Share</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoSidebar\r\n","\r\nimport {useRef, useState} from \"react\";\r\nimport \"../css/video.css\";\r\nimport VideoFotter from \"./VideoFotter\";\r\nimport VideoSidebar from \"./VideoSidebar\";\r\n\r\nconst Video = (props) => {\r\n    const videoRef=useRef(null);\r\n    const [playing,setPlaying]=useState(false);\r\n\r\n    const videoPress=()=>{\r\n        // if video playing stop it\r\n        // stop it\r\n\r\n        if(playing){\r\n            videoRef.current.pause();\r\n            setPlaying(false);\r\n        }else{\r\n            videoRef.current.play();\r\n            setPlaying(true);\r\n        }\r\n\r\n        // otherwise if its not playing\r\n        // play it\r\n    }\r\n    return (\r\n        <div className=\"video\">\r\n            <h2 className=\"logo\" >WiggleIt</h2>\r\n            <video onClick={videoPress} className=\"videoPlayer\" ref={videoRef} loop src={props.url} >\r\n            \r\n            </video>\r\n            <VideoFotter channel={props.channel} description={props.description} song={props.song} />\r\n            <VideoSidebar likes={props.likes} shares={props.shares} messages={props.messages} videoUrl={props.url} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video\r\n","\nimport {useState,useEffect} from \"react\";\nimport './App.css';\nimport axios from \"./axios\";\nimport Video from './components/Video';\n\nfunction App() {\n\n  const[videos,setVideos]=useState([]);\n  \n  useEffect(()=>{\n    const fetchPosts=async()=>{\n      const req=await axios.get(\"/api/posts\");\n      setVideos(req.data);\n    }\n    fetchPosts();\n  },[]);\n\n  return (\n    // BEM naming convention\n    <div className=\"app\">\n      <div className=\"appVideo\">\n        {videos.map((video)=>{\n          return <Video channel={video.channel} description={video.description} song={video.song} likes={video.likes} messages={video.messages} shares={video.shares} url={\"https://wiggleit-backend.herokuapp.com/\"+video.filePath}  />;\n        })}\n      </div>\n      {/* app container */}\n        \t{/* Videos */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}